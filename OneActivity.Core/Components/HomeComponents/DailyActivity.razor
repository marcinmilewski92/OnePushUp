<div class="card mt-4">
    <div class="card-header">
        <h3>@Content.DailyTitle</h3>
    </div>
    <div class="card-body">
        @if (_isLoading)
        {
            <p>@Content.LoadingText</p>
        }
        else if (_hasCompletedToday && !_isEditing)
        {
            <div class="alert @(_lastEntry != null && _lastEntry.Quantity > 0 ? "alert-success" : "alert-warning")">
                @if (_lastEntry != null && _lastEntry.Quantity > 0)
                {
                    <h4>@Content.AlreadyCompletedTitle</h4>
                    <p>@(Content.AlreadyCompletedMessage(_lastEntry!.Quantity))</p>
                }
                else
                {
                    <h4>@Content.RecordedZeroTitle</h4>
                    <p>@Content.RecordedZeroMessage</p>
                }
                
                <div class="mt-2">
                    <button class="btn btn-outline-success" style="color: #2E8B57; border-color: #2E8B57;" @onclick="EnableEditMode">
                        <i class="bi bi-pencil"></i> @Content.EditButtonText
                    </button>
                </div>
            </div>
        }
        else if (_isEditing)
        {
            <h4>@Content.EditEntryTitle</h4>
            <p class="text-muted">@Content.EditEntryPrompt</p>
            
            <EditForm Model="@this" OnValidSubmit="UpdateTrainingEntry">
                <div class="mb-3">
                    <InputRadioGroup @bind-Value="_selectedOption">
                        <div class="form-check">
                            <InputRadio class="form-check-input" Value="@ActivityOption.Yes" id="edit-option-yes" />
                            <label class="form-check-label" for="edit-option-yes">
                                @Content.EditOptionYesLabel
                            </label>
                        </div>
                        <div class="form-check">
                            <InputRadio class="form-check-input" Value="@ActivityOption.YesMore" id="edit-option-more" />
                            <label class="form-check-label" for="edit-option-more">
                                @Content.EditOptionYesMoreLabel
                            </label>
                        </div>
                        <div class="form-check">
                            <InputRadio class="form-check-input" Value="@ActivityOption.No" id="edit-option-no" />
                            <label class="form-check-label" for="edit-option-no">
                                @Content.EditOptionNoLabel
                            </label>
                        </div>
                    </InputRadioGroup>
                </div>
                
                @if (_selectedOption == ActivityOption.YesMore)
                {
                    <div class="mb-3">
                        <label for="edit-repetitions" class="form-label">@Content.HowManyLabel</label>
                        <InputNumber class="form-control" id="edit-repetitions" @bind-Value="_repetitions" min="@(_minMoreQuantity)" />
                        @if (_repetitionError)
                        {
                            <div class="text-danger mt-1">@Content.GetPleaseEnterValidNumberText(_minMoreQuantity)</div>
                        }
                    </div>
                }
                
                <div>
                    <button type="submit" class="btn btn-primary me-2" disabled="@_isSaving">
                        @if (_isSaving)
                        {
                            <span>@Content.SavingText</span>
                        }
                        else
                        {
                            <span>@Content.UpdateText</span>
                        }
                    </button>
                    <button type="button" class="btn btn-outline-secondary" @onclick="CancelEdit">
                        @Content.CancelText
                    </button>
                </div>
            </EditForm>
        }
        else
        {
            <p class="mb-3">@Content.PromptToday</p>
            
            <EditForm Model="@this" OnValidSubmit="SaveTrainingEntry">
                <div class="mb-3">
                    <InputRadioGroup @bind-Value="_selectedOption">
                        <div class="form-check">
                            <InputRadio class="form-check-input" Value="@ActivityOption.Yes" id="option-yes" />
                            <label class="form-check-label" for="option-yes">
                                @Content.YesText
                            </label>
                        </div>
                        <div class="form-check">
                            <InputRadio class="form-check-input" Value="@ActivityOption.YesMore" id="option-more" />
                            <label class="form-check-label" for="option-more">
                                @Content.YesMoreText
                            </label>
                        </div>
                        <div class="form-check">
                            <InputRadio class="form-check-input" Value="@ActivityOption.No" id="option-no" />
                            <label class="form-check-label" for="option-no">
                                @Content.NoText
                            </label>
                        </div>
                    </InputRadioGroup>
                </div>
                
                @if (_selectedOption == ActivityOption.YesMore)
                {
                    <div class="mb-3">
                        <label for="repetitions" class="form-label">@Content.HowManyLabel</label>
                        <InputNumber class="form-control" id="repetitions" @bind-Value="_repetitions" min="@(_minMoreQuantity)" />
                        @if (_repetitionError)
                        {
                            <div class="text-danger mt-1">@Content.GetPleaseEnterValidNumberText(_minMoreQuantity)</div>
                        }
                    </div>
                }
                
                <button type="submit" class="btn btn-primary" disabled="@_isSaving">
                    @if (_isSaving)
                    {
                        <span>@Content.SavingText</span>
                    }
                    else
                    {
                        <span>@Content.SaveText</span>
                    }
                </button>
            </EditForm>
        }
        
        @if (!string.IsNullOrEmpty(_message))
        {
            <div class="alert @(_isError ? "alert-danger" : "alert-success") mt-3">
                @_message
            </div>
        }

        @* Confetti overlay when a non-zero entry is saved *@
        @if (_showConfetti)
        {
            <div class="confetti-overlay">
                @{
                    var rnd = new Random();
                    for (var i = 0; i < 80; i++)
                    {
                        var left = rnd.Next(0, 100);
                        var size = rnd.Next(6, 12);
                        var duration = rnd.Next(1200, 2400);
                        var delay = rnd.Next(0, 300);
                        var color = ConfettiColors[rnd.Next(ConfettiColors.Length)];
                <span class="confetti" style="left:@($"{left}vw"); width:@($"{size}px"); height:@($"{size}px"); background:@color; animation-duration:@($"{duration}ms"); animation-delay:@($"{delay}ms");"></span>
                    }
                }
            </div>
        }
    </div>
</div>
